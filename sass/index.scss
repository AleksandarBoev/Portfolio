:root {
  --social-icon-size: 3rem;

  --education-box-width: 25rem;
  --education-box-height: calc(var(--education-box-width) - 10rem);
  --education-section-width: calc(var(--education-box-width) * 2); //twice the width of the education box
  --education-box-slide-time: 0.5s;

  --timeline-line-position: 30%;
  --timeline-line-width: 0.3em;
  --timeline-distance-to-line: 3%;
}

img {
  display: block;
  width: 100%;
}

.about-me {
  padding-top: 2em;
  display: flex;
  flex-direction: column;
  align-items: center;

  .about-me-image-container {
    margin: 0 auto;
    width: 8rem;
    border-radius: 50%;
    overflow: hidden;
  }

  p {
    max-width: 35em;
  }
}

.education-section {
  display: flex;
  flex-direction: column;
  align-items: center;

  > * {
    margin-top: 3em;
  }

  .education-softuni {
    background-image: url(../images/softuni-me.jpg);
  }

  .education-tu {
    background-image: url(../images/tu.jpg);
  }

  .education-box {
    width: var(--education-box-width);
    height: var(--education-box-height);
    display: inline-block;
    position: relative; //for the absolute position of ":before" and "h2"
    background-size: cover;
    background-repeat: no-repeat;
    transition: transform var(--education-box-slide-time); //take this much time to slide to the left
  }

  .education-box:before { //adding a color layer over the image
    content: ' ';
    display: block;
    width: 100%;
    height: 100%;
    //parent element (.education-box) has "relative". So this element is placed depending on the parent.
    //Default position is top:0, left:0 (over the parent element)
    position: absolute;
    background-color: rgba(110, 110, 110, 0.6); //layer color
  }

  h3 {
    color: white;
    position: absolute; //will be placed inside parent relative
    top: 12%;
    left: 50%;
    transform: translate(-50%, -50%); // move to the left by 50% width of the h2 element and to the top by 50% of the element height
    display: block;
    background-color: rgba(0, 0, 0, 0.4);
    width: 80%;
  }

  > section {
    width: var(--education-section-width);
    text-align: center; //center the ".education-box"
    position: relative; //for the paragraph information about education
  }

  > section:hover div {
    transform: translateX(-50%); //move the background image & heading by half of its own width to the left
  }

  p.education-information {
    opacity: 0;
    position: absolute;
    top: 10%;
    left: 55%;
    width: 45%;
    transition: opacity 0.2s; //fadeout time when NOT hovering
    text-align: left;
  }

  > section:hover p { /* TODO hover won't work on phones (I think). Check this link for more: https://stackoverflow.com/questions/41098293/equivalent-to-hover-for-mobile-aps*/
    opacity: 100%;
    transition: opacity var(--education-box-slide-time) 0.5s; // after box slide is finished, start appearing
  }
}

.timeline {
  margin: 0 auto;
  width: 75%;

  /* line container */
  .timeline-container {
    position: relative;
    margin: 0 auto;
  }

  /* line */
  .timeline-container::after {
    content: ' ';
    position: absolute;
    width: var(--timeline-line-width);
    height: 100%;
    background-color: black;
    top: 0;
    left: var(--timeline-line-position);
  }



  /* has only 2 things in it. And there will be room between them */
  .timeline-point {
    display: flex;
    justify-content: space-between;
    margin-bottom: 3em;
    position: relative;
    transition: color 0.5s;
  }

  /* circles on the line for every event */
  .timeline-point:before {
    content: ' ';
    display: block;
    height: 1.5em;
    width: 1.5em;
    border-radius: 50%;
    background-color: black;
    position: absolute;
    left: var(--timeline-line-position); /* places it close to the line */
    /* move half the width of the line to the right and half of your own width to the left. This way it is perfectly centered
    also move 40% of your height to the top. Looks centered*/
    transform: translate(calc((0.5 * var(--timeline-line-width)) - 50%), -40%);
    top: 0.5em;
  }

  .timeline-point:hover {
    color: darkblue;
  }

  time {
    text-align: right;
    flex-basis: calc(var(--timeline-line-position) - var(--timeline-distance-to-line)); /* on the left of the line and leave some room for the "space-between" to take effect and make it look nice */
  }

  .content {
    text-align: left;
    flex-basis: calc(100% - var(--timeline-line-position) - var(--timeline-distance-to-line)); /* on the right of the line */
  }

  h2 {
    text-align: center;
  }

  h3 {
    margin-top: 0;
    margin-bottom: 1em;
  }

  p {
    max-width: 25em;
  }
}